package FaultToleranceDPSS;


/**
* FaultToleranceDPSS/_DPSS_FTStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from FaultToleranceDPSS.idl
* Sunday, August 2, 2020 5:22:25 AM EDT
*/

public class _DPSS_FTStub extends org.omg.CORBA.portable.ObjectImpl implements FaultToleranceDPSS.DPSS_FT
{

  public boolean logIn (String userName, String Password, String ipAddress)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("logIn", true);
                $out.write_string (userName);
                $out.write_string (Password);
                $out.write_string (ipAddress);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return logIn (userName, Password, ipAddress        );
            } finally {
                _releaseReply ($in);
            }
  } // logIn

  public boolean createPlayerAccount (String firstName, String lastName, int Age, String userName, String Password, String IPAddress)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("createPlayerAccount", true);
                $out.write_string (firstName);
                $out.write_string (lastName);
                $out.write_long (Age);
                $out.write_string (userName);
                $out.write_string (Password);
                $out.write_string (IPAddress);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return createPlayerAccount (firstName, lastName, Age, userName, Password, IPAddress        );
            } finally {
                _releaseReply ($in);
            }
  } // createPlayerAccount

  public boolean logOut (String userName)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("logOut", true);
                $out.write_string (userName);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return logOut (userName        );
            } finally {
                _releaseReply ($in);
            }
  } // logOut

  public String[] getPlayerUpdate (String adminId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getPlayerUpdate", true);
                $out.write_string (adminId);
                $in = _invoke ($out);
                String $result[] = FaultToleranceDPSS.ResultListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getPlayerUpdate (adminId        );
            } finally {
                _releaseReply ($in);
            }
  } // getPlayerUpdate

  public boolean suspendAccount (String adminId, String adminPword, String adminIp, String suspendAccount)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("suspendAccount", true);
                $out.write_string (adminId);
                $out.write_string (adminPword);
                $out.write_string (adminIp);
                $out.write_string (suspendAccount);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return suspendAccount (adminId, adminPword, adminIp, suspendAccount        );
            } finally {
                _releaseReply ($in);
            }
  } // suspendAccount

  public boolean transferAccount (String userName, String Password, String oldIp, String newIp)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("transferAccount", true);
                $out.write_string (userName);
                $out.write_string (Password);
                $out.write_string (oldIp);
                $out.write_string (newIp);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return transferAccount (userName, Password, oldIp, newIp        );
            } finally {
                _releaseReply ($in);
            }
  } // transferAccount


  //		string logIn(in string userName);
  public void shutdown ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("shutdown", false);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                shutdown (        );
            } finally {
                _releaseReply ($in);
            }
  } // shutdown

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:FaultToleranceDPSS/DPSS_FT:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _DPSS_FTStub
